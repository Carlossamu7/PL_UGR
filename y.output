Terminals unused in grammar

   DESDE


Estado 26 conflictos: 3 desplazamiento(s)/reducción(ones)
Estado 27 conflictos: 3 desplazamiento(s)/reducción(ones)
Estado 42 conflictos: 3 desplazamiento(s)/reducción(ones)
Estado 45 conflictos: 3 desplazamiento(s)/reducción(ones)
Estado 47 conflictos: 3 desplazamiento(s)/reducción(ones)
Estado 48 conflictos: 3 desplazamiento(s)/reducción(ones)
Estado 52 conflictos: 2 desplazamiento/reducción, 5 reducción/reducción
Estado 56 conflictos: 3 desplazamiento(s)/reducción(ones)
Estado 57 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 58 conflictos: 3 desplazamiento(s)/reducción(ones)
Estado 64 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 65 conflictos: 2 desplazamiento(s)/reducción(ones)
Estado 76 conflictos: 3 desplazamiento(s)/reducción(ones)
Estado 87 conflictos: 3 desplazamiento(s)/reducción(ones)
Estado 89 conflictos: 3 desplazamiento(s)/reducción(ones)
Estado 90 conflictos: 3 desplazamiento(s)/reducción(ones)
Estado 91 conflictos: 3 desplazamiento(s)/reducción(ones)
Estado 92 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 101 conflictos: 3 desplazamiento(s)/reducción(ones)
Estado 116 conflictos: 3 desplazamiento(s)/reducción(ones)
Estado 117 conflictos: 1 desplazamiento(s)/reducción(ones)
Estado 119 conflictos: 3 desplazamiento(s)/reducción(ones)
Estado 128 conflictos: 3 desplazamiento(s)/reducción(ones)


Gramática

    0 $accept: programa $end

    1 programa: CABECERA bloque

    2 bloque: INIBLOQUE declar_variables_locales declar_subprogs sentencias FINBLOQUE

    3 declar_subprogs: declar_subprogs declar_subprog
    4                | /* vacío */

    5 declar_subprog: cabecera_subprog bloque

    6 declar_variables_locales: INIVARIABLES variables_locales FINVARIABLES
    7                         | /* vacío */

    8 variables_locales: variables_locales cuerpo_declar_variables
    9                  | cuerpo_declar_variables

   10 cuerpo_declar_variables: tipo lista_identificadores FINLINEA
   11                        | tipo sentencia_asignacion
   12                        | error

   13 lista_identificadores: lista_identificadores COMA IDENTIFICADOR
   14                      | IDENTIFICADOR

   15 cabecera_subprog: tipo IDENTIFICADOR PARIZQ lista_parametros PARDER

   16 sentencias: sentencias sentencia
   17           | sentencia

   18 sentencia: bloque
   19          | sentencia_asignacion
   20          | sentencia_if
   21          | sentencia_while
   22          | sentencia_entrada
   23          | sentencia_salida
   24          | sentencia_return
   25          | sentencia_for
   26          | funcion FINLINEA

   27 sentencia_asignacion: IDENTIFICADOR ASIGNACION exp_cad FINLINEA

   28 sentencia_if: CONDICION PARIZQ expresion PARDER sentencia SUBCONDICION sentencia
   29             | CONDICION PARIZQ expresion PARDER sentencia

   30 sentencia_while: CICLO PARIZQ expresion PARDER sentencia

   31 sentencia_entrada: ENTRADA lista_variables FINLINEA

   32 sentencia_salida: SALIDA lista_exp_cadena FINLINEA

   33 sentencia_return: RETURN expresion FINLINEA

   34 sentencia_for: BUCLE IDENTIFICADOR DOSPUNTOSIGUAL expresion HASTA expresion PASO expresion sentencia

   35 lista_parametros: lista_parametros COMA tipo IDENTIFICADOR
   36                 | tipo IDENTIFICADOR

   37 lista_exp_cadena: lista_exp_cadena COMA exp_cad
   38                 | exp_cad

   39 exp_cad: expresion
   40        | CADENA

   41 lista_variables: lista_variables COMA IDENTIFICADOR
   42                | IDENTIFICADOR

   43 lista_expresiones: lista_expresiones COMA expresion
   44                  | expresion

   45 expresion: PARIZQ expresion PARDER
   46          | OPUNARIO expresion
   47          | SIGNO expresion
   48          | expresion SIGNO expresion
   49          | expresion OPBINARIO expresion
   50          | IDENTIFICADOR
   51          | lista
   52          | constante
   53          | funcion
   54          | expresion OPTERNARIO_1 expresion OPTERNARIO_2 expresion

   55 funcion: IDENTIFICADOR PARIZQ lista_expresiones PARDER

   56 constante: signo ENTERO
   57          | signo REAL
   58          | CONSTANTE_CARACTER
   59          | CONSTANTE_BOOLEANA

   60 lista: ABRIRCORCHETE lista CERRARCORCHETE
   61      | lista COMA signo constante
   62      | signo constante

   63 tipo: TIPO
   64     | LISTA_DE TIPO

   65 signo: SIGNO
   66      | /* vacío */


Terminales con las reglas donde aparecen

$end (0) 0
error (256) 12
CABECERA (258) 1
IDENTIFICADOR (259) 13 14 15 27 34 35 36 41 42 50 55
OPBINARIO (260) 49
OPTERNARIO_1 (261) 54
OPTERNARIO_2 (262) 54
SIGNO (263) 47 48 65
ENTERO (264) 56
REAL (265) 57
TIPO (266) 63 64
BUCLE (267) 34
DESDE (268)
HASTA (269) 34
PASO (270) 34
CONDICION (271) 28 29
SUBCONDICION (272) 28
CICLO (273) 30
ASIGNACION (274) 27
ENTRADA (275) 31
SALIDA (276) 32
RETURN (277) 33
INIBLOQUE (278) 2
FINBLOQUE (279) 2
INIVARIABLES (280) 6
FINVARIABLES (281) 6
CONSTANTE_BOOLEANA (282) 59
CADENA (283) 40
CONSTANTE_CARACTER (284) 58
PARIZQ (285) 15 28 29 30 45 55
PARDER (286) 15 28 29 30 45 55
COMA (287) 13 35 37 41 43 61
FINLINEA (288) 10 26 27 31 32 33
DOSPUNTOSIGUAL (289) 34
ABRIRCORCHETE (290) 60
CERRARCORCHETE (291) 60
OPUNARIO (292) 46
LISTA_DE (293) 64


No terminales con las reglas donde aparecen

$accept (39)
    en la izquierda: 0
programa (40)
    en la izquierda: 1, en la derecha: 0
bloque (41)
    en la izquierda: 2, en la derecha: 1 5 18
declar_subprogs (42)
    en la izquierda: 3 4, en la derecha: 2 3
declar_subprog (43)
    en la izquierda: 5, en la derecha: 3
declar_variables_locales (44)
    en la izquierda: 6 7, en la derecha: 2
variables_locales (45)
    en la izquierda: 8 9, en la derecha: 6 8
cuerpo_declar_variables (46)
    en la izquierda: 10 11 12, en la derecha: 8 9
lista_identificadores (47)
    en la izquierda: 13 14, en la derecha: 10 13
cabecera_subprog (48)
    en la izquierda: 15, en la derecha: 5
sentencias (49)
    en la izquierda: 16 17, en la derecha: 2 16
sentencia (50)
    en la izquierda: 18 19 20 21 22 23 24 25 26, en la derecha: 16
    17 28 29 30 34
sentencia_asignacion (51)
    en la izquierda: 27, en la derecha: 11 19
sentencia_if (52)
    en la izquierda: 28 29, en la derecha: 20
sentencia_while (53)
    en la izquierda: 30, en la derecha: 21
sentencia_entrada (54)
    en la izquierda: 31, en la derecha: 22
sentencia_salida (55)
    en la izquierda: 32, en la derecha: 23
sentencia_return (56)
    en la izquierda: 33, en la derecha: 24
sentencia_for (57)
    en la izquierda: 34, en la derecha: 25
lista_parametros (58)
    en la izquierda: 35 36, en la derecha: 15 35
lista_exp_cadena (59)
    en la izquierda: 37 38, en la derecha: 32 37
exp_cad (60)
    en la izquierda: 39 40, en la derecha: 27 37 38
lista_variables (61)
    en la izquierda: 41 42, en la derecha: 31 41
lista_expresiones (62)
    en la izquierda: 43 44, en la derecha: 43 55
expresion (63)
    en la izquierda: 45 46 47 48 49 50 51 52 53 54, en la derecha:
    28 29 30 33 34 39 43 44 45 46 47 48 49 54
funcion (64)
    en la izquierda: 55, en la derecha: 26 53
constante (65)
    en la izquierda: 56 57 58 59, en la derecha: 52 61 62
lista (66)
    en la izquierda: 60 61 62, en la derecha: 51 60 61
tipo (67)
    en la izquierda: 63 64, en la derecha: 10 11 15 35 36
signo (68)
    en la izquierda: 65 66, en la derecha: 56 57 61 62


estado 0

    0 $accept: . programa $end

    CABECERA  desplazar e ir al estado 1

    programa  ir al estado 2


estado 1

    1 programa: CABECERA . bloque

    INIBLOQUE  desplazar e ir al estado 3

    bloque  ir al estado 4


estado 2

    0 $accept: programa . $end

    $end  desplazar e ir al estado 5


estado 3

    2 bloque: INIBLOQUE . declar_variables_locales declar_subprogs sentencias FINBLOQUE

    INIVARIABLES  desplazar e ir al estado 6

    $default  reduce usando la regla 7 (declar_variables_locales)

    declar_variables_locales  ir al estado 7


estado 4

    1 programa: CABECERA bloque .

    $default  reduce usando la regla 1 (programa)


estado 5

    0 $accept: programa $end .

    $default  aceptar


estado 6

    6 declar_variables_locales: INIVARIABLES . variables_locales FINVARIABLES

    error     desplazar e ir al estado 8
    TIPO      desplazar e ir al estado 9
    LISTA_DE  desplazar e ir al estado 10

    variables_locales        ir al estado 11
    cuerpo_declar_variables  ir al estado 12
    tipo                     ir al estado 13


estado 7

    2 bloque: INIBLOQUE declar_variables_locales . declar_subprogs sentencias FINBLOQUE

    $default  reduce usando la regla 4 (declar_subprogs)

    declar_subprogs  ir al estado 14


estado 8

   12 cuerpo_declar_variables: error .

    $default  reduce usando la regla 12 (cuerpo_declar_variables)


estado 9

   63 tipo: TIPO .

    $default  reduce usando la regla 63 (tipo)


estado 10

   64 tipo: LISTA_DE . TIPO

    TIPO  desplazar e ir al estado 15


estado 11

    6 declar_variables_locales: INIVARIABLES variables_locales . FINVARIABLES
    8 variables_locales: variables_locales . cuerpo_declar_variables

    error         desplazar e ir al estado 8
    TIPO          desplazar e ir al estado 9
    FINVARIABLES  desplazar e ir al estado 16
    LISTA_DE      desplazar e ir al estado 10

    cuerpo_declar_variables  ir al estado 17
    tipo                     ir al estado 13


estado 12

    9 variables_locales: cuerpo_declar_variables .

    $default  reduce usando la regla 9 (variables_locales)


estado 13

   10 cuerpo_declar_variables: tipo . lista_identificadores FINLINEA
   11                        | tipo . sentencia_asignacion

    IDENTIFICADOR  desplazar e ir al estado 18

    lista_identificadores  ir al estado 19
    sentencia_asignacion   ir al estado 20


estado 14

    2 bloque: INIBLOQUE declar_variables_locales declar_subprogs . sentencias FINBLOQUE
    3 declar_subprogs: declar_subprogs . declar_subprog

    IDENTIFICADOR  desplazar e ir al estado 21
    TIPO           desplazar e ir al estado 9
    BUCLE          desplazar e ir al estado 22
    CONDICION      desplazar e ir al estado 23
    CICLO          desplazar e ir al estado 24
    ENTRADA        desplazar e ir al estado 25
    SALIDA         desplazar e ir al estado 26
    RETURN         desplazar e ir al estado 27
    INIBLOQUE      desplazar e ir al estado 3
    LISTA_DE       desplazar e ir al estado 10

    bloque                ir al estado 28
    declar_subprog        ir al estado 29
    cabecera_subprog      ir al estado 30
    sentencias            ir al estado 31
    sentencia             ir al estado 32
    sentencia_asignacion  ir al estado 33
    sentencia_if          ir al estado 34
    sentencia_while       ir al estado 35
    sentencia_entrada     ir al estado 36
    sentencia_salida      ir al estado 37
    sentencia_return      ir al estado 38
    sentencia_for         ir al estado 39
    funcion               ir al estado 40
    tipo                  ir al estado 41


estado 15

   64 tipo: LISTA_DE TIPO .

    $default  reduce usando la regla 64 (tipo)


estado 16

    6 declar_variables_locales: INIVARIABLES variables_locales FINVARIABLES .

    $default  reduce usando la regla 6 (declar_variables_locales)


estado 17

    8 variables_locales: variables_locales cuerpo_declar_variables .

    $default  reduce usando la regla 8 (variables_locales)


estado 18

   14 lista_identificadores: IDENTIFICADOR .
   27 sentencia_asignacion: IDENTIFICADOR . ASIGNACION exp_cad FINLINEA

    ASIGNACION  desplazar e ir al estado 42

    $default  reduce usando la regla 14 (lista_identificadores)


estado 19

   10 cuerpo_declar_variables: tipo lista_identificadores . FINLINEA
   13 lista_identificadores: lista_identificadores . COMA IDENTIFICADOR

    COMA      desplazar e ir al estado 43
    FINLINEA  desplazar e ir al estado 44


estado 20

   11 cuerpo_declar_variables: tipo sentencia_asignacion .

    $default  reduce usando la regla 11 (cuerpo_declar_variables)


estado 21

   27 sentencia_asignacion: IDENTIFICADOR . ASIGNACION exp_cad FINLINEA
   55 funcion: IDENTIFICADOR . PARIZQ lista_expresiones PARDER

    ASIGNACION  desplazar e ir al estado 42
    PARIZQ      desplazar e ir al estado 45


estado 22

   34 sentencia_for: BUCLE . IDENTIFICADOR DOSPUNTOSIGUAL expresion HASTA expresion PASO expresion sentencia

    IDENTIFICADOR  desplazar e ir al estado 46


estado 23

   28 sentencia_if: CONDICION . PARIZQ expresion PARDER sentencia SUBCONDICION sentencia
   29             | CONDICION . PARIZQ expresion PARDER sentencia

    PARIZQ  desplazar e ir al estado 47


estado 24

   30 sentencia_while: CICLO . PARIZQ expresion PARDER sentencia

    PARIZQ  desplazar e ir al estado 48


estado 25

   31 sentencia_entrada: ENTRADA . lista_variables FINLINEA

    IDENTIFICADOR  desplazar e ir al estado 49

    lista_variables  ir al estado 50


estado 26

   32 sentencia_salida: SALIDA . lista_exp_cadena FINLINEA

    IDENTIFICADOR       desplazar e ir al estado 51
    SIGNO               desplazar e ir al estado 52
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CADENA              desplazar e ir al estado 54
    CONSTANTE_CARACTER  desplazar e ir al estado 55
    PARIZQ              desplazar e ir al estado 56
    ABRIRCORCHETE       desplazar e ir al estado 57
    OPUNARIO            desplazar e ir al estado 58

    SIGNO               [reduce usando la regla 66 (signo)]
    CONSTANTE_BOOLEANA  [reduce usando la regla 66 (signo)]
    CONSTANTE_CARACTER  [reduce usando la regla 66 (signo)]
    $default            reduce usando la regla 66 (signo)

    lista_exp_cadena  ir al estado 59
    exp_cad           ir al estado 60
    expresion         ir al estado 61
    funcion           ir al estado 62
    constante         ir al estado 63
    lista             ir al estado 64
    signo             ir al estado 65


estado 27

   33 sentencia_return: RETURN . expresion FINLINEA

    IDENTIFICADOR       desplazar e ir al estado 51
    SIGNO               desplazar e ir al estado 52
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CONSTANTE_CARACTER  desplazar e ir al estado 55
    PARIZQ              desplazar e ir al estado 56
    ABRIRCORCHETE       desplazar e ir al estado 57
    OPUNARIO            desplazar e ir al estado 58

    SIGNO               [reduce usando la regla 66 (signo)]
    CONSTANTE_BOOLEANA  [reduce usando la regla 66 (signo)]
    CONSTANTE_CARACTER  [reduce usando la regla 66 (signo)]
    $default            reduce usando la regla 66 (signo)

    expresion  ir al estado 66
    funcion    ir al estado 62
    constante  ir al estado 63
    lista      ir al estado 64
    signo      ir al estado 65


estado 28

   18 sentencia: bloque .

    $default  reduce usando la regla 18 (sentencia)


estado 29

    3 declar_subprogs: declar_subprogs declar_subprog .

    $default  reduce usando la regla 3 (declar_subprogs)


estado 30

    5 declar_subprog: cabecera_subprog . bloque

    INIBLOQUE  desplazar e ir al estado 3

    bloque  ir al estado 67


estado 31

    2 bloque: INIBLOQUE declar_variables_locales declar_subprogs sentencias . FINBLOQUE
   16 sentencias: sentencias . sentencia

    IDENTIFICADOR  desplazar e ir al estado 21
    BUCLE          desplazar e ir al estado 22
    CONDICION      desplazar e ir al estado 23
    CICLO          desplazar e ir al estado 24
    ENTRADA        desplazar e ir al estado 25
    SALIDA         desplazar e ir al estado 26
    RETURN         desplazar e ir al estado 27
    INIBLOQUE      desplazar e ir al estado 3
    FINBLOQUE      desplazar e ir al estado 68

    bloque                ir al estado 28
    sentencia             ir al estado 69
    sentencia_asignacion  ir al estado 33
    sentencia_if          ir al estado 34
    sentencia_while       ir al estado 35
    sentencia_entrada     ir al estado 36
    sentencia_salida      ir al estado 37
    sentencia_return      ir al estado 38
    sentencia_for         ir al estado 39
    funcion               ir al estado 40


estado 32

   17 sentencias: sentencia .

    $default  reduce usando la regla 17 (sentencias)


estado 33

   19 sentencia: sentencia_asignacion .

    $default  reduce usando la regla 19 (sentencia)


estado 34

   20 sentencia: sentencia_if .

    $default  reduce usando la regla 20 (sentencia)


estado 35

   21 sentencia: sentencia_while .

    $default  reduce usando la regla 21 (sentencia)


estado 36

   22 sentencia: sentencia_entrada .

    $default  reduce usando la regla 22 (sentencia)


estado 37

   23 sentencia: sentencia_salida .

    $default  reduce usando la regla 23 (sentencia)


estado 38

   24 sentencia: sentencia_return .

    $default  reduce usando la regla 24 (sentencia)


estado 39

   25 sentencia: sentencia_for .

    $default  reduce usando la regla 25 (sentencia)


estado 40

   26 sentencia: funcion . FINLINEA

    FINLINEA  desplazar e ir al estado 70


estado 41

   15 cabecera_subprog: tipo . IDENTIFICADOR PARIZQ lista_parametros PARDER

    IDENTIFICADOR  desplazar e ir al estado 71


estado 42

   27 sentencia_asignacion: IDENTIFICADOR ASIGNACION . exp_cad FINLINEA

    IDENTIFICADOR       desplazar e ir al estado 51
    SIGNO               desplazar e ir al estado 52
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CADENA              desplazar e ir al estado 54
    CONSTANTE_CARACTER  desplazar e ir al estado 55
    PARIZQ              desplazar e ir al estado 56
    ABRIRCORCHETE       desplazar e ir al estado 57
    OPUNARIO            desplazar e ir al estado 58

    SIGNO               [reduce usando la regla 66 (signo)]
    CONSTANTE_BOOLEANA  [reduce usando la regla 66 (signo)]
    CONSTANTE_CARACTER  [reduce usando la regla 66 (signo)]
    $default            reduce usando la regla 66 (signo)

    exp_cad    ir al estado 72
    expresion  ir al estado 61
    funcion    ir al estado 62
    constante  ir al estado 63
    lista      ir al estado 64
    signo      ir al estado 65


estado 43

   13 lista_identificadores: lista_identificadores COMA . IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 73


estado 44

   10 cuerpo_declar_variables: tipo lista_identificadores FINLINEA .

    $default  reduce usando la regla 10 (cuerpo_declar_variables)


estado 45

   55 funcion: IDENTIFICADOR PARIZQ . lista_expresiones PARDER

    IDENTIFICADOR       desplazar e ir al estado 51
    SIGNO               desplazar e ir al estado 52
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CONSTANTE_CARACTER  desplazar e ir al estado 55
    PARIZQ              desplazar e ir al estado 56
    ABRIRCORCHETE       desplazar e ir al estado 57
    OPUNARIO            desplazar e ir al estado 58

    SIGNO               [reduce usando la regla 66 (signo)]
    CONSTANTE_BOOLEANA  [reduce usando la regla 66 (signo)]
    CONSTANTE_CARACTER  [reduce usando la regla 66 (signo)]
    $default            reduce usando la regla 66 (signo)

    lista_expresiones  ir al estado 74
    expresion          ir al estado 75
    funcion            ir al estado 62
    constante          ir al estado 63
    lista              ir al estado 64
    signo              ir al estado 65


estado 46

   34 sentencia_for: BUCLE IDENTIFICADOR . DOSPUNTOSIGUAL expresion HASTA expresion PASO expresion sentencia

    DOSPUNTOSIGUAL  desplazar e ir al estado 76


estado 47

   28 sentencia_if: CONDICION PARIZQ . expresion PARDER sentencia SUBCONDICION sentencia
   29             | CONDICION PARIZQ . expresion PARDER sentencia

    IDENTIFICADOR       desplazar e ir al estado 51
    SIGNO               desplazar e ir al estado 52
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CONSTANTE_CARACTER  desplazar e ir al estado 55
    PARIZQ              desplazar e ir al estado 56
    ABRIRCORCHETE       desplazar e ir al estado 57
    OPUNARIO            desplazar e ir al estado 58

    SIGNO               [reduce usando la regla 66 (signo)]
    CONSTANTE_BOOLEANA  [reduce usando la regla 66 (signo)]
    CONSTANTE_CARACTER  [reduce usando la regla 66 (signo)]
    $default            reduce usando la regla 66 (signo)

    expresion  ir al estado 77
    funcion    ir al estado 62
    constante  ir al estado 63
    lista      ir al estado 64
    signo      ir al estado 65


estado 48

   30 sentencia_while: CICLO PARIZQ . expresion PARDER sentencia

    IDENTIFICADOR       desplazar e ir al estado 51
    SIGNO               desplazar e ir al estado 52
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CONSTANTE_CARACTER  desplazar e ir al estado 55
    PARIZQ              desplazar e ir al estado 56
    ABRIRCORCHETE       desplazar e ir al estado 57
    OPUNARIO            desplazar e ir al estado 58

    SIGNO               [reduce usando la regla 66 (signo)]
    CONSTANTE_BOOLEANA  [reduce usando la regla 66 (signo)]
    CONSTANTE_CARACTER  [reduce usando la regla 66 (signo)]
    $default            reduce usando la regla 66 (signo)

    expresion  ir al estado 78
    funcion    ir al estado 62
    constante  ir al estado 63
    lista      ir al estado 64
    signo      ir al estado 65


estado 49

   42 lista_variables: IDENTIFICADOR .

    $default  reduce usando la regla 42 (lista_variables)


estado 50

   31 sentencia_entrada: ENTRADA lista_variables . FINLINEA
   41 lista_variables: lista_variables . COMA IDENTIFICADOR

    COMA      desplazar e ir al estado 79
    FINLINEA  desplazar e ir al estado 80


estado 51

   50 expresion: IDENTIFICADOR .
   55 funcion: IDENTIFICADOR . PARIZQ lista_expresiones PARDER

    PARIZQ  desplazar e ir al estado 45

    $default  reduce usando la regla 50 (expresion)


estado 52

   47 expresion: SIGNO . expresion
   65 signo: SIGNO .

    IDENTIFICADOR       desplazar e ir al estado 51
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CONSTANTE_CARACTER  desplazar e ir al estado 55
    PARIZQ              desplazar e ir al estado 56
    ABRIRCORCHETE       desplazar e ir al estado 57
    OPUNARIO            desplazar e ir al estado 58

    SIGNO               reduce usando la regla 65 (signo)
    SIGNO               [reduce usando la regla 66 (signo)]
    ENTERO              reduce usando la regla 65 (signo)
    ENTERO              [reduce usando la regla 66 (signo)]
    REAL                reduce usando la regla 65 (signo)
    REAL                [reduce usando la regla 66 (signo)]
    CONSTANTE_BOOLEANA  [reduce usando la regla 65 (signo)]
    CONSTANTE_BOOLEANA  [reduce usando la regla 66 (signo)]
    CONSTANTE_CARACTER  [reduce usando la regla 65 (signo)]
    CONSTANTE_CARACTER  [reduce usando la regla 66 (signo)]
    $default            reduce usando la regla 65 (signo)

    expresion  ir al estado 81
    funcion    ir al estado 62
    constante  ir al estado 63
    lista      ir al estado 64
    signo      ir al estado 65


estado 53

   59 constante: CONSTANTE_BOOLEANA .

    $default  reduce usando la regla 59 (constante)


estado 54

   40 exp_cad: CADENA .

    $default  reduce usando la regla 40 (exp_cad)


estado 55

   58 constante: CONSTANTE_CARACTER .

    $default  reduce usando la regla 58 (constante)


estado 56

   45 expresion: PARIZQ . expresion PARDER

    IDENTIFICADOR       desplazar e ir al estado 51
    SIGNO               desplazar e ir al estado 52
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CONSTANTE_CARACTER  desplazar e ir al estado 55
    PARIZQ              desplazar e ir al estado 56
    ABRIRCORCHETE       desplazar e ir al estado 57
    OPUNARIO            desplazar e ir al estado 58

    SIGNO               [reduce usando la regla 66 (signo)]
    CONSTANTE_BOOLEANA  [reduce usando la regla 66 (signo)]
    CONSTANTE_CARACTER  [reduce usando la regla 66 (signo)]
    $default            reduce usando la regla 66 (signo)

    expresion  ir al estado 82
    funcion    ir al estado 62
    constante  ir al estado 63
    lista      ir al estado 64
    signo      ir al estado 65


estado 57

   60 lista: ABRIRCORCHETE . lista CERRARCORCHETE

    SIGNO          desplazar e ir al estado 83
    ABRIRCORCHETE  desplazar e ir al estado 57

    SIGNO     [reduce usando la regla 66 (signo)]
    $default  reduce usando la regla 66 (signo)

    lista  ir al estado 84
    signo  ir al estado 85


estado 58

   46 expresion: OPUNARIO . expresion

    IDENTIFICADOR       desplazar e ir al estado 51
    SIGNO               desplazar e ir al estado 52
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CONSTANTE_CARACTER  desplazar e ir al estado 55
    PARIZQ              desplazar e ir al estado 56
    ABRIRCORCHETE       desplazar e ir al estado 57
    OPUNARIO            desplazar e ir al estado 58

    SIGNO               [reduce usando la regla 66 (signo)]
    CONSTANTE_BOOLEANA  [reduce usando la regla 66 (signo)]
    CONSTANTE_CARACTER  [reduce usando la regla 66 (signo)]
    $default            reduce usando la regla 66 (signo)

    expresion  ir al estado 86
    funcion    ir al estado 62
    constante  ir al estado 63
    lista      ir al estado 64
    signo      ir al estado 65


estado 59

   32 sentencia_salida: SALIDA lista_exp_cadena . FINLINEA
   37 lista_exp_cadena: lista_exp_cadena . COMA exp_cad

    COMA      desplazar e ir al estado 87
    FINLINEA  desplazar e ir al estado 88


estado 60

   38 lista_exp_cadena: exp_cad .

    $default  reduce usando la regla 38 (lista_exp_cadena)


estado 61

   39 exp_cad: expresion .
   48 expresion: expresion . SIGNO expresion
   49          | expresion . OPBINARIO expresion
   54          | expresion . OPTERNARIO_1 expresion OPTERNARIO_2 expresion

    OPBINARIO     desplazar e ir al estado 89
    OPTERNARIO_1  desplazar e ir al estado 90
    SIGNO         desplazar e ir al estado 91

    $default  reduce usando la regla 39 (exp_cad)


estado 62

   53 expresion: funcion .

    $default  reduce usando la regla 53 (expresion)


estado 63

   52 expresion: constante .

    $default  reduce usando la regla 52 (expresion)


estado 64

   51 expresion: lista .
   61 lista: lista . COMA signo constante

    COMA  desplazar e ir al estado 92

    COMA      [reduce usando la regla 51 (expresion)]
    $default  reduce usando la regla 51 (expresion)


estado 65

   56 constante: signo . ENTERO
   57          | signo . REAL
   62 lista: signo . constante

    SIGNO               desplazar e ir al estado 83
    ENTERO              desplazar e ir al estado 93
    REAL                desplazar e ir al estado 94
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CONSTANTE_CARACTER  desplazar e ir al estado 55

    ENTERO  [reduce usando la regla 66 (signo)]
    REAL    [reduce usando la regla 66 (signo)]

    constante  ir al estado 95
    signo      ir al estado 96


estado 66

   33 sentencia_return: RETURN expresion . FINLINEA
   48 expresion: expresion . SIGNO expresion
   49          | expresion . OPBINARIO expresion
   54          | expresion . OPTERNARIO_1 expresion OPTERNARIO_2 expresion

    OPBINARIO     desplazar e ir al estado 89
    OPTERNARIO_1  desplazar e ir al estado 90
    SIGNO         desplazar e ir al estado 91
    FINLINEA      desplazar e ir al estado 97


estado 67

    5 declar_subprog: cabecera_subprog bloque .

    $default  reduce usando la regla 5 (declar_subprog)


estado 68

    2 bloque: INIBLOQUE declar_variables_locales declar_subprogs sentencias FINBLOQUE .

    $default  reduce usando la regla 2 (bloque)


estado 69

   16 sentencias: sentencias sentencia .

    $default  reduce usando la regla 16 (sentencias)


estado 70

   26 sentencia: funcion FINLINEA .

    $default  reduce usando la regla 26 (sentencia)


estado 71

   15 cabecera_subprog: tipo IDENTIFICADOR . PARIZQ lista_parametros PARDER

    PARIZQ  desplazar e ir al estado 98


estado 72

   27 sentencia_asignacion: IDENTIFICADOR ASIGNACION exp_cad . FINLINEA

    FINLINEA  desplazar e ir al estado 99


estado 73

   13 lista_identificadores: lista_identificadores COMA IDENTIFICADOR .

    $default  reduce usando la regla 13 (lista_identificadores)


estado 74

   43 lista_expresiones: lista_expresiones . COMA expresion
   55 funcion: IDENTIFICADOR PARIZQ lista_expresiones . PARDER

    PARDER  desplazar e ir al estado 100
    COMA    desplazar e ir al estado 101


estado 75

   44 lista_expresiones: expresion .
   48 expresion: expresion . SIGNO expresion
   49          | expresion . OPBINARIO expresion
   54          | expresion . OPTERNARIO_1 expresion OPTERNARIO_2 expresion

    OPBINARIO     desplazar e ir al estado 89
    OPTERNARIO_1  desplazar e ir al estado 90
    SIGNO         desplazar e ir al estado 91

    $default  reduce usando la regla 44 (lista_expresiones)


estado 76

   34 sentencia_for: BUCLE IDENTIFICADOR DOSPUNTOSIGUAL . expresion HASTA expresion PASO expresion sentencia

    IDENTIFICADOR       desplazar e ir al estado 51
    SIGNO               desplazar e ir al estado 52
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CONSTANTE_CARACTER  desplazar e ir al estado 55
    PARIZQ              desplazar e ir al estado 56
    ABRIRCORCHETE       desplazar e ir al estado 57
    OPUNARIO            desplazar e ir al estado 58

    SIGNO               [reduce usando la regla 66 (signo)]
    CONSTANTE_BOOLEANA  [reduce usando la regla 66 (signo)]
    CONSTANTE_CARACTER  [reduce usando la regla 66 (signo)]
    $default            reduce usando la regla 66 (signo)

    expresion  ir al estado 102
    funcion    ir al estado 62
    constante  ir al estado 63
    lista      ir al estado 64
    signo      ir al estado 65


estado 77

   28 sentencia_if: CONDICION PARIZQ expresion . PARDER sentencia SUBCONDICION sentencia
   29             | CONDICION PARIZQ expresion . PARDER sentencia
   48 expresion: expresion . SIGNO expresion
   49          | expresion . OPBINARIO expresion
   54          | expresion . OPTERNARIO_1 expresion OPTERNARIO_2 expresion

    OPBINARIO     desplazar e ir al estado 89
    OPTERNARIO_1  desplazar e ir al estado 90
    SIGNO         desplazar e ir al estado 91
    PARDER        desplazar e ir al estado 103


estado 78

   30 sentencia_while: CICLO PARIZQ expresion . PARDER sentencia
   48 expresion: expresion . SIGNO expresion
   49          | expresion . OPBINARIO expresion
   54          | expresion . OPTERNARIO_1 expresion OPTERNARIO_2 expresion

    OPBINARIO     desplazar e ir al estado 89
    OPTERNARIO_1  desplazar e ir al estado 90
    SIGNO         desplazar e ir al estado 91
    PARDER        desplazar e ir al estado 104


estado 79

   41 lista_variables: lista_variables COMA . IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 105


estado 80

   31 sentencia_entrada: ENTRADA lista_variables FINLINEA .

    $default  reduce usando la regla 31 (sentencia_entrada)


estado 81

   47 expresion: SIGNO expresion .
   48          | expresion . SIGNO expresion
   49          | expresion . OPBINARIO expresion
   54          | expresion . OPTERNARIO_1 expresion OPTERNARIO_2 expresion

    OPTERNARIO_1  desplazar e ir al estado 90

    $default  reduce usando la regla 47 (expresion)


estado 82

   45 expresion: PARIZQ expresion . PARDER
   48          | expresion . SIGNO expresion
   49          | expresion . OPBINARIO expresion
   54          | expresion . OPTERNARIO_1 expresion OPTERNARIO_2 expresion

    OPBINARIO     desplazar e ir al estado 89
    OPTERNARIO_1  desplazar e ir al estado 90
    SIGNO         desplazar e ir al estado 91
    PARDER        desplazar e ir al estado 106


estado 83

   65 signo: SIGNO .

    $default  reduce usando la regla 65 (signo)


estado 84

   60 lista: ABRIRCORCHETE lista . CERRARCORCHETE
   61      | lista . COMA signo constante

    COMA            desplazar e ir al estado 92
    CERRARCORCHETE  desplazar e ir al estado 107


estado 85

   62 lista: signo . constante

    SIGNO               desplazar e ir al estado 83
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CONSTANTE_CARACTER  desplazar e ir al estado 55

    $default  reduce usando la regla 66 (signo)

    constante  ir al estado 95
    signo      ir al estado 96


estado 86

   46 expresion: OPUNARIO expresion .
   48          | expresion . SIGNO expresion
   49          | expresion . OPBINARIO expresion
   54          | expresion . OPTERNARIO_1 expresion OPTERNARIO_2 expresion

    OPTERNARIO_1  desplazar e ir al estado 90

    $default  reduce usando la regla 46 (expresion)


estado 87

   37 lista_exp_cadena: lista_exp_cadena COMA . exp_cad

    IDENTIFICADOR       desplazar e ir al estado 51
    SIGNO               desplazar e ir al estado 52
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CADENA              desplazar e ir al estado 54
    CONSTANTE_CARACTER  desplazar e ir al estado 55
    PARIZQ              desplazar e ir al estado 56
    ABRIRCORCHETE       desplazar e ir al estado 57
    OPUNARIO            desplazar e ir al estado 58

    SIGNO               [reduce usando la regla 66 (signo)]
    CONSTANTE_BOOLEANA  [reduce usando la regla 66 (signo)]
    CONSTANTE_CARACTER  [reduce usando la regla 66 (signo)]
    $default            reduce usando la regla 66 (signo)

    exp_cad    ir al estado 108
    expresion  ir al estado 61
    funcion    ir al estado 62
    constante  ir al estado 63
    lista      ir al estado 64
    signo      ir al estado 65


estado 88

   32 sentencia_salida: SALIDA lista_exp_cadena FINLINEA .

    $default  reduce usando la regla 32 (sentencia_salida)


estado 89

   49 expresion: expresion OPBINARIO . expresion

    IDENTIFICADOR       desplazar e ir al estado 51
    SIGNO               desplazar e ir al estado 52
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CONSTANTE_CARACTER  desplazar e ir al estado 55
    PARIZQ              desplazar e ir al estado 56
    ABRIRCORCHETE       desplazar e ir al estado 57
    OPUNARIO            desplazar e ir al estado 58

    SIGNO               [reduce usando la regla 66 (signo)]
    CONSTANTE_BOOLEANA  [reduce usando la regla 66 (signo)]
    CONSTANTE_CARACTER  [reduce usando la regla 66 (signo)]
    $default            reduce usando la regla 66 (signo)

    expresion  ir al estado 109
    funcion    ir al estado 62
    constante  ir al estado 63
    lista      ir al estado 64
    signo      ir al estado 65


estado 90

   54 expresion: expresion OPTERNARIO_1 . expresion OPTERNARIO_2 expresion

    IDENTIFICADOR       desplazar e ir al estado 51
    SIGNO               desplazar e ir al estado 52
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CONSTANTE_CARACTER  desplazar e ir al estado 55
    PARIZQ              desplazar e ir al estado 56
    ABRIRCORCHETE       desplazar e ir al estado 57
    OPUNARIO            desplazar e ir al estado 58

    SIGNO               [reduce usando la regla 66 (signo)]
    CONSTANTE_BOOLEANA  [reduce usando la regla 66 (signo)]
    CONSTANTE_CARACTER  [reduce usando la regla 66 (signo)]
    $default            reduce usando la regla 66 (signo)

    expresion  ir al estado 110
    funcion    ir al estado 62
    constante  ir al estado 63
    lista      ir al estado 64
    signo      ir al estado 65


estado 91

   48 expresion: expresion SIGNO . expresion

    IDENTIFICADOR       desplazar e ir al estado 51
    SIGNO               desplazar e ir al estado 52
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CONSTANTE_CARACTER  desplazar e ir al estado 55
    PARIZQ              desplazar e ir al estado 56
    ABRIRCORCHETE       desplazar e ir al estado 57
    OPUNARIO            desplazar e ir al estado 58

    SIGNO               [reduce usando la regla 66 (signo)]
    CONSTANTE_BOOLEANA  [reduce usando la regla 66 (signo)]
    CONSTANTE_CARACTER  [reduce usando la regla 66 (signo)]
    $default            reduce usando la regla 66 (signo)

    expresion  ir al estado 111
    funcion    ir al estado 62
    constante  ir al estado 63
    lista      ir al estado 64
    signo      ir al estado 65


estado 92

   61 lista: lista COMA . signo constante

    SIGNO  desplazar e ir al estado 83

    SIGNO     [reduce usando la regla 66 (signo)]
    $default  reduce usando la regla 66 (signo)

    signo  ir al estado 112


estado 93

   56 constante: signo ENTERO .

    $default  reduce usando la regla 56 (constante)


estado 94

   57 constante: signo REAL .

    $default  reduce usando la regla 57 (constante)


estado 95

   62 lista: signo constante .

    $default  reduce usando la regla 62 (lista)


estado 96

   56 constante: signo . ENTERO
   57          | signo . REAL

    ENTERO  desplazar e ir al estado 93
    REAL    desplazar e ir al estado 94


estado 97

   33 sentencia_return: RETURN expresion FINLINEA .

    $default  reduce usando la regla 33 (sentencia_return)


estado 98

   15 cabecera_subprog: tipo IDENTIFICADOR PARIZQ . lista_parametros PARDER

    TIPO      desplazar e ir al estado 9
    LISTA_DE  desplazar e ir al estado 10

    lista_parametros  ir al estado 113
    tipo              ir al estado 114


estado 99

   27 sentencia_asignacion: IDENTIFICADOR ASIGNACION exp_cad FINLINEA .

    $default  reduce usando la regla 27 (sentencia_asignacion)


estado 100

   55 funcion: IDENTIFICADOR PARIZQ lista_expresiones PARDER .

    $default  reduce usando la regla 55 (funcion)


estado 101

   43 lista_expresiones: lista_expresiones COMA . expresion

    IDENTIFICADOR       desplazar e ir al estado 51
    SIGNO               desplazar e ir al estado 52
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CONSTANTE_CARACTER  desplazar e ir al estado 55
    PARIZQ              desplazar e ir al estado 56
    ABRIRCORCHETE       desplazar e ir al estado 57
    OPUNARIO            desplazar e ir al estado 58

    SIGNO               [reduce usando la regla 66 (signo)]
    CONSTANTE_BOOLEANA  [reduce usando la regla 66 (signo)]
    CONSTANTE_CARACTER  [reduce usando la regla 66 (signo)]
    $default            reduce usando la regla 66 (signo)

    expresion  ir al estado 115
    funcion    ir al estado 62
    constante  ir al estado 63
    lista      ir al estado 64
    signo      ir al estado 65


estado 102

   34 sentencia_for: BUCLE IDENTIFICADOR DOSPUNTOSIGUAL expresion . HASTA expresion PASO expresion sentencia
   48 expresion: expresion . SIGNO expresion
   49          | expresion . OPBINARIO expresion
   54          | expresion . OPTERNARIO_1 expresion OPTERNARIO_2 expresion

    OPBINARIO     desplazar e ir al estado 89
    OPTERNARIO_1  desplazar e ir al estado 90
    SIGNO         desplazar e ir al estado 91
    HASTA         desplazar e ir al estado 116


estado 103

   28 sentencia_if: CONDICION PARIZQ expresion PARDER . sentencia SUBCONDICION sentencia
   29             | CONDICION PARIZQ expresion PARDER . sentencia

    IDENTIFICADOR  desplazar e ir al estado 21
    BUCLE          desplazar e ir al estado 22
    CONDICION      desplazar e ir al estado 23
    CICLO          desplazar e ir al estado 24
    ENTRADA        desplazar e ir al estado 25
    SALIDA         desplazar e ir al estado 26
    RETURN         desplazar e ir al estado 27
    INIBLOQUE      desplazar e ir al estado 3

    bloque                ir al estado 28
    sentencia             ir al estado 117
    sentencia_asignacion  ir al estado 33
    sentencia_if          ir al estado 34
    sentencia_while       ir al estado 35
    sentencia_entrada     ir al estado 36
    sentencia_salida      ir al estado 37
    sentencia_return      ir al estado 38
    sentencia_for         ir al estado 39
    funcion               ir al estado 40


estado 104

   30 sentencia_while: CICLO PARIZQ expresion PARDER . sentencia

    IDENTIFICADOR  desplazar e ir al estado 21
    BUCLE          desplazar e ir al estado 22
    CONDICION      desplazar e ir al estado 23
    CICLO          desplazar e ir al estado 24
    ENTRADA        desplazar e ir al estado 25
    SALIDA         desplazar e ir al estado 26
    RETURN         desplazar e ir al estado 27
    INIBLOQUE      desplazar e ir al estado 3

    bloque                ir al estado 28
    sentencia             ir al estado 118
    sentencia_asignacion  ir al estado 33
    sentencia_if          ir al estado 34
    sentencia_while       ir al estado 35
    sentencia_entrada     ir al estado 36
    sentencia_salida      ir al estado 37
    sentencia_return      ir al estado 38
    sentencia_for         ir al estado 39
    funcion               ir al estado 40


estado 105

   41 lista_variables: lista_variables COMA IDENTIFICADOR .

    $default  reduce usando la regla 41 (lista_variables)


estado 106

   45 expresion: PARIZQ expresion PARDER .

    $default  reduce usando la regla 45 (expresion)


estado 107

   60 lista: ABRIRCORCHETE lista CERRARCORCHETE .

    $default  reduce usando la regla 60 (lista)


estado 108

   37 lista_exp_cadena: lista_exp_cadena COMA exp_cad .

    $default  reduce usando la regla 37 (lista_exp_cadena)


estado 109

   48 expresion: expresion . SIGNO expresion
   49          | expresion . OPBINARIO expresion
   49          | expresion OPBINARIO expresion .
   54          | expresion . OPTERNARIO_1 expresion OPTERNARIO_2 expresion

    OPTERNARIO_1  desplazar e ir al estado 90
    SIGNO         desplazar e ir al estado 91

    $default  reduce usando la regla 49 (expresion)


estado 110

   48 expresion: expresion . SIGNO expresion
   49          | expresion . OPBINARIO expresion
   54          | expresion . OPTERNARIO_1 expresion OPTERNARIO_2 expresion
   54          | expresion OPTERNARIO_1 expresion . OPTERNARIO_2 expresion

    OPBINARIO     desplazar e ir al estado 89
    OPTERNARIO_1  desplazar e ir al estado 90
    OPTERNARIO_2  desplazar e ir al estado 119
    SIGNO         desplazar e ir al estado 91


estado 111

   48 expresion: expresion . SIGNO expresion
   48          | expresion SIGNO expresion .
   49          | expresion . OPBINARIO expresion
   54          | expresion . OPTERNARIO_1 expresion OPTERNARIO_2 expresion

    OPTERNARIO_1  desplazar e ir al estado 90

    $default  reduce usando la regla 48 (expresion)


estado 112

   61 lista: lista COMA signo . constante

    SIGNO               desplazar e ir al estado 83
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CONSTANTE_CARACTER  desplazar e ir al estado 55

    $default  reduce usando la regla 66 (signo)

    constante  ir al estado 120
    signo      ir al estado 96


estado 113

   15 cabecera_subprog: tipo IDENTIFICADOR PARIZQ lista_parametros . PARDER
   35 lista_parametros: lista_parametros . COMA tipo IDENTIFICADOR

    PARDER  desplazar e ir al estado 121
    COMA    desplazar e ir al estado 122


estado 114

   36 lista_parametros: tipo . IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 123


estado 115

   43 lista_expresiones: lista_expresiones COMA expresion .
   48 expresion: expresion . SIGNO expresion
   49          | expresion . OPBINARIO expresion
   54          | expresion . OPTERNARIO_1 expresion OPTERNARIO_2 expresion

    OPBINARIO     desplazar e ir al estado 89
    OPTERNARIO_1  desplazar e ir al estado 90
    SIGNO         desplazar e ir al estado 91

    $default  reduce usando la regla 43 (lista_expresiones)


estado 116

   34 sentencia_for: BUCLE IDENTIFICADOR DOSPUNTOSIGUAL expresion HASTA . expresion PASO expresion sentencia

    IDENTIFICADOR       desplazar e ir al estado 51
    SIGNO               desplazar e ir al estado 52
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CONSTANTE_CARACTER  desplazar e ir al estado 55
    PARIZQ              desplazar e ir al estado 56
    ABRIRCORCHETE       desplazar e ir al estado 57
    OPUNARIO            desplazar e ir al estado 58

    SIGNO               [reduce usando la regla 66 (signo)]
    CONSTANTE_BOOLEANA  [reduce usando la regla 66 (signo)]
    CONSTANTE_CARACTER  [reduce usando la regla 66 (signo)]
    $default            reduce usando la regla 66 (signo)

    expresion  ir al estado 124
    funcion    ir al estado 62
    constante  ir al estado 63
    lista      ir al estado 64
    signo      ir al estado 65


estado 117

   28 sentencia_if: CONDICION PARIZQ expresion PARDER sentencia . SUBCONDICION sentencia
   29             | CONDICION PARIZQ expresion PARDER sentencia .

    SUBCONDICION  desplazar e ir al estado 125

    SUBCONDICION  [reduce usando la regla 29 (sentencia_if)]
    $default      reduce usando la regla 29 (sentencia_if)


estado 118

   30 sentencia_while: CICLO PARIZQ expresion PARDER sentencia .

    $default  reduce usando la regla 30 (sentencia_while)


estado 119

   54 expresion: expresion OPTERNARIO_1 expresion OPTERNARIO_2 . expresion

    IDENTIFICADOR       desplazar e ir al estado 51
    SIGNO               desplazar e ir al estado 52
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CONSTANTE_CARACTER  desplazar e ir al estado 55
    PARIZQ              desplazar e ir al estado 56
    ABRIRCORCHETE       desplazar e ir al estado 57
    OPUNARIO            desplazar e ir al estado 58

    SIGNO               [reduce usando la regla 66 (signo)]
    CONSTANTE_BOOLEANA  [reduce usando la regla 66 (signo)]
    CONSTANTE_CARACTER  [reduce usando la regla 66 (signo)]
    $default            reduce usando la regla 66 (signo)

    expresion  ir al estado 126
    funcion    ir al estado 62
    constante  ir al estado 63
    lista      ir al estado 64
    signo      ir al estado 65


estado 120

   61 lista: lista COMA signo constante .

    $default  reduce usando la regla 61 (lista)


estado 121

   15 cabecera_subprog: tipo IDENTIFICADOR PARIZQ lista_parametros PARDER .

    $default  reduce usando la regla 15 (cabecera_subprog)


estado 122

   35 lista_parametros: lista_parametros COMA . tipo IDENTIFICADOR

    TIPO      desplazar e ir al estado 9
    LISTA_DE  desplazar e ir al estado 10

    tipo  ir al estado 127


estado 123

   36 lista_parametros: tipo IDENTIFICADOR .

    $default  reduce usando la regla 36 (lista_parametros)


estado 124

   34 sentencia_for: BUCLE IDENTIFICADOR DOSPUNTOSIGUAL expresion HASTA expresion . PASO expresion sentencia
   48 expresion: expresion . SIGNO expresion
   49          | expresion . OPBINARIO expresion
   54          | expresion . OPTERNARIO_1 expresion OPTERNARIO_2 expresion

    OPBINARIO     desplazar e ir al estado 89
    OPTERNARIO_1  desplazar e ir al estado 90
    SIGNO         desplazar e ir al estado 91
    PASO          desplazar e ir al estado 128


estado 125

   28 sentencia_if: CONDICION PARIZQ expresion PARDER sentencia SUBCONDICION . sentencia

    IDENTIFICADOR  desplazar e ir al estado 21
    BUCLE          desplazar e ir al estado 22
    CONDICION      desplazar e ir al estado 23
    CICLO          desplazar e ir al estado 24
    ENTRADA        desplazar e ir al estado 25
    SALIDA         desplazar e ir al estado 26
    RETURN         desplazar e ir al estado 27
    INIBLOQUE      desplazar e ir al estado 3

    bloque                ir al estado 28
    sentencia             ir al estado 129
    sentencia_asignacion  ir al estado 33
    sentencia_if          ir al estado 34
    sentencia_while       ir al estado 35
    sentencia_entrada     ir al estado 36
    sentencia_salida      ir al estado 37
    sentencia_return      ir al estado 38
    sentencia_for         ir al estado 39
    funcion               ir al estado 40


estado 126

   48 expresion: expresion . SIGNO expresion
   49          | expresion . OPBINARIO expresion
   54          | expresion . OPTERNARIO_1 expresion OPTERNARIO_2 expresion
   54          | expresion OPTERNARIO_1 expresion OPTERNARIO_2 expresion .

    $default  reduce usando la regla 54 (expresion)


estado 127

   35 lista_parametros: lista_parametros COMA tipo . IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 130


estado 128

   34 sentencia_for: BUCLE IDENTIFICADOR DOSPUNTOSIGUAL expresion HASTA expresion PASO . expresion sentencia

    IDENTIFICADOR       desplazar e ir al estado 51
    SIGNO               desplazar e ir al estado 52
    CONSTANTE_BOOLEANA  desplazar e ir al estado 53
    CONSTANTE_CARACTER  desplazar e ir al estado 55
    PARIZQ              desplazar e ir al estado 56
    ABRIRCORCHETE       desplazar e ir al estado 57
    OPUNARIO            desplazar e ir al estado 58

    SIGNO               [reduce usando la regla 66 (signo)]
    CONSTANTE_BOOLEANA  [reduce usando la regla 66 (signo)]
    CONSTANTE_CARACTER  [reduce usando la regla 66 (signo)]
    $default            reduce usando la regla 66 (signo)

    expresion  ir al estado 131
    funcion    ir al estado 62
    constante  ir al estado 63
    lista      ir al estado 64
    signo      ir al estado 65


estado 129

   28 sentencia_if: CONDICION PARIZQ expresion PARDER sentencia SUBCONDICION sentencia .

    $default  reduce usando la regla 28 (sentencia_if)


estado 130

   35 lista_parametros: lista_parametros COMA tipo IDENTIFICADOR .

    $default  reduce usando la regla 35 (lista_parametros)


estado 131

   34 sentencia_for: BUCLE IDENTIFICADOR DOSPUNTOSIGUAL expresion HASTA expresion PASO expresion . sentencia
   48 expresion: expresion . SIGNO expresion
   49          | expresion . OPBINARIO expresion
   54          | expresion . OPTERNARIO_1 expresion OPTERNARIO_2 expresion

    IDENTIFICADOR  desplazar e ir al estado 21
    OPBINARIO      desplazar e ir al estado 89
    OPTERNARIO_1   desplazar e ir al estado 90
    SIGNO          desplazar e ir al estado 91
    BUCLE          desplazar e ir al estado 22
    CONDICION      desplazar e ir al estado 23
    CICLO          desplazar e ir al estado 24
    ENTRADA        desplazar e ir al estado 25
    SALIDA         desplazar e ir al estado 26
    RETURN         desplazar e ir al estado 27
    INIBLOQUE      desplazar e ir al estado 3

    bloque                ir al estado 28
    sentencia             ir al estado 132
    sentencia_asignacion  ir al estado 33
    sentencia_if          ir al estado 34
    sentencia_while       ir al estado 35
    sentencia_entrada     ir al estado 36
    sentencia_salida      ir al estado 37
    sentencia_return      ir al estado 38
    sentencia_for         ir al estado 39
    funcion               ir al estado 40


estado 132

   34 sentencia_for: BUCLE IDENTIFICADOR DOSPUNTOSIGUAL expresion HASTA expresion PASO expresion sentencia .

    $default  reduce usando la regla 34 (sentencia_for)
